import * as SorobanClient from 'soroban-client';
import { SorobanContextType } from '@soroban-react/core';
export type InvokeArgs = {
    contractAddress: string;
    method: string;
    args?: SorobanClient.xdr.ScVal[] | undefined;
    signAndSend?: boolean;
    fee?: number;
    skipAddingFootprint?: boolean;
    secretKey?: string;
    sorobanContext: SorobanContextType;
};
export declare function contractInvoke({ contractAddress, method, args, signAndSend, fee, skipAddingFootprint, secretKey, sorobanContext, }: InvokeArgs): Promise<SorobanClient.SorobanRpc.SimulateHostFunctionResult | {
    xdr: string;
    status: SorobanClient.SorobanRpc.GetTransactionStatus;
    latestLedger: number;
    latestLedgerCloseTime: number;
    oldestLedger: number;
    oldestLedgerCloseTime: number;
    applicationOrder?: number | undefined;
    feeBump?: boolean | undefined;
    envelopeXdr?: string | undefined;
    resultXdr?: string | undefined;
    resultMetaXdr?: string | undefined;
    ledger?: number | undefined;
    createdAt?: number | undefined;
} | undefined>;
