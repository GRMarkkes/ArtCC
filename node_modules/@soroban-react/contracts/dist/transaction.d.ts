import { SorobanContextType } from '@soroban-react/core';
import * as SorobanClient from 'soroban-client';
import type { Tx, Transaction, TxResponse } from './types';
export type SignAndSendArgs = {
    txn: Transaction;
    secretKey?: string;
    skipAddingFootprint?: boolean;
    sorobanContext: SorobanContextType;
};
export declare function signAndSendTransaction({ txn, secretKey, skipAddingFootprint, sorobanContext }: SignAndSendArgs): Promise<{
    xdr: string;
    status: SorobanClient.SorobanRpc.GetTransactionStatus;
    latestLedger: number;
    latestLedgerCloseTime: number;
    oldestLedger: number;
    oldestLedgerCloseTime: number;
    applicationOrder?: number | undefined;
    feeBump?: boolean | undefined;
    envelopeXdr?: string | undefined;
    resultXdr?: string | undefined;
    resultMetaXdr?: string | undefined;
    ledger?: number | undefined;
    createdAt?: number | undefined;
}>;
export declare function sendTx({ tx, secondsToWait, server }: {
    tx: Tx;
    secondsToWait: number;
    server: SorobanClient.Server;
}): Promise<TxResponse>;
