import { getPublicKey, isConnected, signTransaction, signBlob } from '@stellar/freighter-api';
export const isFreighterInstalled = async () => isConnected();
export const freighterGetPublicKey = async () => {
    if (!isConnected()) {
        throw new Error(`Freighter is not connected`);
    }
    return getPublicKey();
};
export const freighterSignTransaction = async (params) => {
    if (!isConnected()) {
        throw new Error(`Freighter is not connected`);
    }
    return signTransaction(params.xdr, {
        accountToSign: params.accountToSign,
        networkPassphrase: params.networkPassphrase,
    });
};
export const freighterSignBlob = async (params) => {
    if (!isConnected()) {
        throw new Error(`Freighter is not connected`);
    }
    return signBlob(params.b64blob, {
        accountToSign: params.accountToSign
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJlaWdodGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9mcmVpZ2h0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFlBQVksRUFDWixXQUFXLEVBQ1gsZUFBZSxFQUNmLFFBQVEsRUFDVCxNQUFNLHdCQUF3QixDQUFDO0FBRWhDLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEtBQUssSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7QUFFOUQsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsS0FBSyxJQUFxQixFQUFFO0lBQy9ELElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7S0FDL0M7SUFFRCxPQUFPLFlBQVksRUFBRSxDQUFDO0FBQ3hCLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLEtBQUssRUFDM0MsTUFBOEIsRUFDYixFQUFFO0lBQ25CLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7S0FDL0M7SUFFRCxPQUFPLGVBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1FBQ2pDLGFBQWEsRUFBRSxNQUFNLENBQUMsYUFBYTtRQUNuQyxpQkFBaUIsRUFBRSxNQUFNLENBQUMsaUJBQWlCO0tBQzVDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEtBQUssRUFDcEMsTUFBZ0MsRUFDZixFQUFFO0lBQ25CLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLDRCQUE0QixDQUFDLENBQUM7S0FDL0M7SUFFRCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFO1FBQzlCLGFBQWEsRUFBRSxNQUFNLENBQUMsYUFBYTtLQUNwQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBnZXRQdWJsaWNLZXksXG4gIGlzQ29ubmVjdGVkLFxuICBzaWduVHJhbnNhY3Rpb24sXG4gIHNpZ25CbG9iXG59IGZyb20gJ0BzdGVsbGFyL2ZyZWlnaHRlci1hcGknO1xuXG5leHBvcnQgY29uc3QgaXNGcmVpZ2h0ZXJJbnN0YWxsZWQgPSBhc3luYyAoKSA9PiBpc0Nvbm5lY3RlZCgpO1xuXG5leHBvcnQgY29uc3QgZnJlaWdodGVyR2V0UHVibGljS2V5ID0gYXN5bmMgKCk6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIGlmICghaXNDb25uZWN0ZWQoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgRnJlaWdodGVyIGlzIG5vdCBjb25uZWN0ZWRgKTtcbiAgfVxuXG4gIHJldHVybiBnZXRQdWJsaWNLZXkoKTtcbn07XG5cbmV4cG9ydCBjb25zdCBmcmVpZ2h0ZXJTaWduVHJhbnNhY3Rpb24gPSBhc3luYyAoXG4gIHBhcmFtczogSUZyZWlnaHRlclNpZ25UeFBhcmFtc1xuKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgaWYgKCFpc0Nvbm5lY3RlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBGcmVpZ2h0ZXIgaXMgbm90IGNvbm5lY3RlZGApO1xuICB9XG5cbiAgcmV0dXJuIHNpZ25UcmFuc2FjdGlvbihwYXJhbXMueGRyLCB7XG4gICAgYWNjb3VudFRvU2lnbjogcGFyYW1zLmFjY291bnRUb1NpZ24sXG4gICAgbmV0d29ya1Bhc3NwaHJhc2U6IHBhcmFtcy5uZXR3b3JrUGFzc3BocmFzZSxcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZnJlaWdodGVyU2lnbkJsb2IgPSBhc3luYyAoXG4gIHBhcmFtczogSUZyZWlnaHRlclNpZ25CbG9iUGFyYW1zXG4pOiBQcm9taXNlPHN0cmluZz4gPT4ge1xuICBpZiAoIWlzQ29ubmVjdGVkKCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEZyZWlnaHRlciBpcyBub3QgY29ubmVjdGVkYCk7XG4gIH1cblxuICByZXR1cm4gc2lnbkJsb2IocGFyYW1zLmI2NGJsb2IsIHtcbiAgICBhY2NvdW50VG9TaWduOiBwYXJhbXMuYWNjb3VudFRvU2lnblxuICB9KTtcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUZyZWlnaHRlclNpZ25UeFBhcmFtcyB7XG4gIHhkcjogc3RyaW5nO1xuICBhY2NvdW50VG9TaWduPzogc3RyaW5nO1xuICBuZXR3b3JrUGFzc3BocmFzZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElGcmVpZ2h0ZXJTaWduQmxvYlBhcmFtcyB7XG4gIGI2NGJsb2I6IHN0cmluZztcbiAgYWNjb3VudFRvU2lnbj86IHN0cmluZztcbn1cbiJdfQ==