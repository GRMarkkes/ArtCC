import { __assign, __rest, __spreadArray } from "tslib";
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { cloneElement } from "react";
import { Label } from "../Label";
import { FieldNote } from "../utils/FieldNote";
import { Icon } from "../../icons";
import "./styles.scss";
export var Select = function (_a) {
    var id = _a.id, fieldSize = _a.fieldSize, children = _a.children, label = _a.label, note = _a.note, error = _a.error, isLabelUppercase = _a.isLabelUppercase, isPill = _a.isPill, isError = _a.isError, isExtraPadding = _a.isExtraPadding, customSelect = _a.customSelect, props = __rest(_a, ["id", "fieldSize", "children", "label", "note", "error", "isLabelUppercase", "isPill", "isError", "isExtraPadding", "customSelect"]);
    var additionalClasses = __spreadArray(__spreadArray(__spreadArray(__spreadArray([
        "Select--".concat(fieldSize)
    ], (props.disabled ? ["Select--disabled"] : []), true), (isError || error ? ["Select--error"] : []), true), (isPill ? ["Select--pill"] : []), true), (isExtraPadding ? ["Select--extra-padding"] : []), true).join(" ");
    var baseSelectProps = {
        id: id,
        "aria-invalid": !!(isError || error),
    };
    return (_jsxs("div", __assign({ className: "Select ".concat(additionalClasses) }, { children: [label && (_jsx(Label, __assign({ htmlFor: id, isUppercase: isLabelUppercase, size: fieldSize === "xs" ? "xs" : "sm" }, { children: label }))), _jsx("div", __assign({ className: "Select__container" }, { children: customSelect ? (cloneElement(customSelect, __assign(__assign({}, baseSelectProps), props))) : (_jsxs(_Fragment, { children: [_jsx("select", __assign({}, baseSelectProps, props, { children: children })), _jsx("span", __assign({ className: "Select__icon", "aria-hidden": "true" }, { children: _jsx(Icon.ChevronDown, {}) }))] })) })), note && _jsx(FieldNote, { children: note }), error && _jsx(FieldNote, __assign({ variant: "error" }, { children: error }))] })));
};
Select.displayName = "Select";
//# sourceMappingURL=index.js.map